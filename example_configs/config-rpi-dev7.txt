LogLevel = 3
#Touch = True
#Screen = True
#Main = True
#Dispatch = True
#DaemonCtl = True
#ISYLoad=True

# switch to authall with HASSpga avail

cfglib = "/home/pi/consolerem/example_configs/cfglib"
include = /home/pi/Console/local/authall.cfg, weathersources.cfg, weathPump.cfg, timetempLQ.cfg,  myclock.cfg,weathPDX.cfg,timetempLQ7.cfg, octoprint.cfg, timetempPDX7.cfg, pgaTstat.cfg, pgawBRmain.cfg, pgaBath.cfg, condotstats.cfg, pgaGR.cfg, mqtt.cfg, pgaKitchen.cfg, pgaOutside.cfg, pgaShades.cfg, pgaScenes.cfg
#pgaalerts.cfg,
HomeScreenName = 'pgawBR'
DimLevel = 10
DimTO = 10
PersistTO = 3
DimIdleListNames = PDXTTbig, Pic, MyClock, LQTTbig, Pumpkin

DimIdleListTimes =	5, 20, 5, 5, 5, 5

MainChain = pgawBR, pgaShades, pgaScenes, Prusa, pgawBath, wxHouse, Pic, Pumpkin, climate.air_conditionerbr_hvac,climate.air_conditionerlr_hvac,Test1, pgaGR, pgaKitchen, pgaOutside
SecondaryChain = Portland, LQTTbig, climate.master_bedroom, climate.living_room

DefaultHub = HASS
HorizBorder = 10
TopBorder = 5
NavKeyHeight = 60
HorizButGap = 5
VertButGap =5

#NodeServerSwitches = SmartStripPlug_E, SmartPlug_NN
#[ISYTest]
#type = ISYDummy

[wxHouse]
type= TimeTemp
label = MUSTANG POINTE,
location = PortlandW
TimeFormat = "%-l:%M:%S %p",""

CondIcon = False
ConditionFields = Sky,Temp
ConditionFormat = "{d[0]} {d[1]}"

FcstIcon = True
ForecastDays = 2
ForecastFields = Day,Sky,High,Low
ForecastFormat = "{d[0]} {d[1]}","{d[2]} / {d[3]}"

ClockSize = 50
LocationSize = 35
CondSize = 30, 20
FcstSize = 20
CmdKeyCol = black
BackgroundColor = black
CharColor = white

[Variables]
    InternetUp = 1
    TestVar = 1
    House = 'PDX'


[Pic]
type = Picture
picturedir = /home/pi/photos/rpi-pgalr
NavKeyAlpha = 50
#singlepic = 'spcpic.jpg'

[Alerts]
	[[AutoVersion]]
	Type = Periodic
	Interval = 3 hours
	Invoke = AutoVersion.CheckUpToDate
	[[ConfigCheck]]
	Type = Periodic
	Interval = 1 minutes
	Invoke = ConfigCheck.ConfigCheck
	[[AdjustScreenDim]]
	Type = Periodic
	At = 11:00pm
	Invoke = AssignVar.Assign
	Parameter = System:DimLevel = 20
	[[AdjustScreenDimUp]]
	Type = Periodic
	At = 7:00am
	Invoke = AssignVar.Assign
	Parameter = System:DimLevel = 50
#	[[DimAway]]
#	Type = NodeChange
#	Node = HASS:input_boolean.home
#	Test = ISFALSE
#	Invoke = AssignVar.Assign
#	Parameter = System:DimLevel = 5
#	[[DimHome]]
#	Type = NodeChange
#	Node = HASS:input_boolean.home
#	Test = ISTRUE
#	Invoke = AssignVar.Assign
#	Parameter = System:DimLevel = 100
	[[AlertAway]]
	Type = NodeChange
	Node = HASSpga:input_boolean.testalert
#    Node = HASS:input_boolean.home
	Test = ISFALSE
	Invoke = AwayAlert



	[[xwatch]]
	Type = FileWatch
	File = x.txt
	# example of the contents of x.txt for testing at bottom of this file (put in Console directory)
	Parameter = Settings
	Invoke = DynAlertScreenx

	[[ywatch]]
	Type = FileWatch
	File = y.txt
	# example of the contents of y.txt for testing at bottom of this file
	Parameter = SingleItem
	Invoke = DynAlertScreeny

#	[[Sanity]]
#	Type = Periodic
#	Interval = 30 seconds
#	Parameter = HASSpga
#	Invoke = CheckIntegrity.CheckStatusCaches

	[[Internet]]
	Type = Periodic
	Interval = 30 seconds
	Invoke = NetworkHealth.Do_Ping
	Parameter = '8.8.8.8',LocalVars:InternetUp

	[[InternetAlert]]
	Type = VarChange
	Var = LocalVars:InternetUp
	Test = NE
	Value = 1
	Invoke = InternetAlertScreen

#	[[Testproc]]
#	Type = Periodic
#	Interval = 13 seconds
#	Invoke = testalerts.AlertProc2

#	[[Testscreen]]
#	Type = Periodic
#	Interval = 13 seconds
#	Invoke = NodeTest2

[DynAlertScreenx]
type = Alert
BackgroundColor = cyan
MessageBack = red
CharColor = black
Message = Line1, line2 xwatch:Test1 line2x, line3 xwatch:Test2 end
DeferTime = 10 seconds
AutoClear = 30 seconds
BlinkTime = 4
KeyColor = maroon

[DynAlertScreeny]
type = Alert
BackgroundColor = cyan
MessageBack = red
CharColor = black
Message = ywatch:file
DeferTime = 10 seconds
BlinkTime = 5,1
KeyColor = maroon
CenterMessage = False


[AwayAlert]
type = Alert
BackgroundColor = royalblue
MessageBack = red
CharColor = black
Message = "House", "in", "AWAY","Mode"
CharSize = 30, 30, 40, 30
DeferTime = 60 seconds
BlinkTime = 2
KeyColor = maroon
[[Action]]
type = SETINPUT
KeyColor = maroon
Var = HASS:input_boolean.home
Value = toggle
#ProgramName = ClearAway
label = Set Home,
FastPress = 0

[InternetAlertScreen]
    type = Alert
    BackgroundColor = black
	MessageBack = green
	CharColor = navyblue
	Message = Internet, Down
	CharSize = 30,
	DeferTime = 10
	BlinkTime = 1
	KeyColor = maroon
	[[Action]]
		type = SETVAR
		Var = LocalVars:InternetUp
		label = Acknowledge, Outage



#[HouseStat]
#    type = Status
#    NormalOff = Pucks, Downlights, Kitchen Dimmer, Office Ceiling
#    NormalOn = Main Hall, Landscape, LR Dual Spots

#[testscrn]
#DefaultHub = ISYTest
#type=Keypad
#label=JeffTest
#[[Dimmer.KIT]]
#Appearance = state*on pink "Val $"
#DefaultAppearance = None purple "Val $"
#[[Dimmer.KIT.2nd]]
#[[Outlet.ENT]]
#[[HASSpga:light.master_bath]]
#type = ONOFF
#label = Tub, Shower
#Appearance = state*on pink "Val $"
#DefaultAppearance = None purple "Val $"
#[[O5.USB HD]]
#[[L5.ISY994I]]
#[[L4]]
#[[Dimmer.FR]]

[Test1]
    Clocked = 2
    ScreenTitle = Bool {} Num {} Select {}
    ScreenTitleColor = red
    ScreenTitleFields = HASS:input_boolean.home, HASS:input_number.inputnum, HASS:input_select.inputselect
    type = Keypad
    label = Test1
    [[PGABOOL]]
    type = SETINPUT
    Var = HASSpga:input_boolean.testalert
    Appearance = false Red "Away;$", true Green "Home;$"
    DefaultAppearance = None red "Test;$"
    #label = TestPGA
    Value = 'toggle'
    [[TestBool]]
    type = SETINPUT
    Fields = HASS:input_datetime.glc_expected_charged, HASS:input_select.inputselect
    Var = HASS:input_boolean.home
    Value = 'toggle'
    label = TBool, {1}, {0}
    [[TestNumInc]]
    type = SETINPUT
    Var = HASS:input_number.inputnum
    Appearance = 0:99 Green "InputSel:$"
    DefaultAppearance = None Purple "$"
    Value = 'inc'
    [[TestNumDec]]
    type = SETINPUT
    Var = HASS:input_number.inputnum
    Appearance = 0:5 Pink "InputSel:$", 5:99 Red "InputSel:$"
    Value = 'dec'
    [[TestNum5]]
    type = SETINPUT
    Var = HASS:input_number.inputnum
    Value = 5
    [[TestSelNC]]
    type = SETINPUT
    Var = HASS:input_select.inputselect
    Value = 'nextcycle'
    Appearance = T2| Red "InputSel:$"
    DefaultAppearance = None Blue "WeirdSel:$"
    Blink = 5
    [[TestSelPC]]
    type = SETINPUT
    Var = HASS:input_select.inputselect
    Value = 'prevcycle'
    [[TestSelN]]
    type = SETINPUT
    Var = HASS:input_select.inputselect
    Value = 'next'
    [[TestSelP]]
    type = SETINPUT
    Var = HASS:input_select.inputselect
    Value = 'prev'
    [[TestSelT2]]
    type = SETINPUT
    Var = HASS:input_select.inputselect
    Value = 'T2'
    [[TestSelFirst]]
    type = SETINPUT
    Var = HASS:input_select.inputselect
    Value = 'first'
    [[TestSelLast]]
    type = SETINPUT
    Var = HASS:input_select.inputselect
    Value = 'last'
    [[cover.west1/position]]
    label = West, Left
    type = SPECCMD
    Command = stop_cover
    SliderCommand = set_cover_position
    Var = HASS:cover.west1:current_position
    SliderParameter = 'position'
    DefaultAppearance = None Green "West Left;$"
    KeyColor = blue
    Blink = 3

    [[HASSpga:scene.pool_lights_on]]
        label = Light, Pool
        type = ON
        SceneProxy = HASSpga:light.pool_light
    [[HASSpga:scene.pool_lights_off]]
        label = Pool,Light,Off
        type = ON
    [[TestSeq]]
    type = VARKEY
    label = Error on Value, $
    Var = LocalVars:TestVar
    ValueSeq = 1,2,3
    Appearance = 1 blue 'T1;T2', 2 (red blue) 'T3;T4', 3 (red blue   green/dull ) 't5;t6;t7'
    #Appearance = 1 blue 'FAN SPEED; LOW',2 red 'FAN SPEED; MED', 3 red 'FAN SPEED; HIGH'
    #DefaultAppearance = None Blue 'Weird Result $'
    Blink = 5
    [[AwayStatus]]
    type = SETINPUT
    Var = HASS:input_boolean.home
    Value = 'toggle'
    label = TBool
    Appearance = false Red "Away;$", true Green "Home;$"
    DefaultAppearance = None Pink "Bad Occ Setting:$"


#[TreeTest]
#type = Keypad
#label = Stuff,
#[[LR1]]
#type = GOTO
#ScreenName = LR1
#KeyColor = purple
#[[LR2]]
#type = GOTO
#ScreenName = LR2
# [[Office Ceiling]]
#    type = ONOFF
#	label = Office, Ceiling2
#	KeyColorOn = black
#	KeyColorOff = black
#[[TreeTest2]]
#type = GOTO
#ScreenName = TreeTest2

# [Test]
#	type = Keypad
#	label = Test
#	[[TestVar]]
#	VarType = Int
#	type = SETVARVALUE

#---------- the test file x.txt for the watchx example is (removing the hash marks):
#Test1 = 104
#Test2 = 102
#---------- the test file y.txt for the watchx example is (removing the hash marks):
#Breaking news - aliens landed!
#Elon Musk wins lottery
#
#Weird stuff
#----------- End example files:  touch them to trigger a change in mod date and the alert


