LogLevel = 3
#Touch = True
#Screen = True
#Main = Trueq
#Dispatch = True
#DaemonCtl = True
#ISYDump = True
#ISYLoad = True

# switch to authall with HASSpga avail

cfglib = "/home/pi/consolerem/example configs/cfglib"
include = /home/pi/Console/local/auth.cfg, weathersources.cfg, weathPump.cfg, timetempLQ.cfg,  myclock.cfg,bathroom.cfg,upperlev.cfg,BR-kck.cfg,tstat.cfg,weathPDX.cfg,timetempLQ7.cfg, pdxmqtt.cfg, octoprint.cfg, weathCC.cfg, timetempPDX7.cfg#, pgaTstat.cfg, pgawBRmain.cfg, pgaOther.cfg, pgaBath.cfg
#pgaalerts.cfg,
HomeScreenName = 'Creator Pro'
DimLevel = 10
DimTO = 5
PersistTO = 3
#DimIdleListNames = Portland, PDXTTbig, MyClock, LQTTbig, Pumpkin
DimIdleListNames = MyClock, PDXTTbig, LQTTbig, Pumpkin

DimIdleListTimes =	5, 5, 5, 5

MainChain = Creator Pro,wxHouse,TreeTest, LR1,Sonos,LR2, Pumpkin, Local, Upper Level, Test
SecondaryChain = Portland, Bathroom, BR, Thermostat - Main,LQTTbig, climate.master_bedroom, climate.living_room, pgawBR, pgawOther, pgawBath

DefaultHub = ISY
HorizBorder = 10
TopBorder = 5
NavKeyHeight = 60
HorizButGap = 5
VertButGap =5



[wxHouse]
type= TimeTemp
label = MUSTANG POINTE,
location = PortlandW
TimeFormat = "%-l:%M:%S %p",""

CondIcon = False
ConditionFields = Sky,Temp
ConditionFormat = "{d[0]} {d[1]}"

FcstIcon = True
ForecastDays = 2
ForecastFields = Day,Sky,High,Low
ForecastFormat = "{d[0]} {d[1]}","{d[2]} / {d[3]}"

ClockSize = 50
LocationSize = 35
CondSize = 30, 20
FcstSize = 20
CmdKeyCol = black
BackgroundColor = black
CharColor = white

[Variables]
    InternetUp = 1

[Sonos]
    type = Sonos
    DefaultHub = HASS

[Alerts]
	[[AutoVersion]]
	Type = Periodic
	Interval = 3 hours
	Invoke = AutoVersion.CheckUpToDate
#	[[Sanity]]
#	Type = Periodic
#	Interval = 30 seconds
#	Parameter = HASSpga
#	Invoke = CheckIntegrity.CheckStatusCaches
#	[[AltVarTest]]
#	Type = StateVarChange
#	Var = tEST
#	Test = NE
#	Value = 0
#	Delay = 5 seconds
#	Invoke = TestAlert
#	[[NodeTest]]
#	Type = NodeChange
#	Node = Office Ceiling
#	Test = NE
#	Value = 0
#	Delay = 5 seconds
#	Invoke = NodeTest
#		[[NodeTest2]]
#	Type = NodeChange
#	Node = Office Ceiling
#	Test = NE
#	Value = 0
#	Delay = 2 seconds
#	Invoke = NodeTest2
[[Garage Door]]
Type = NodeChange
Node = Garage Door Opener-Sensor
Test = EQ
Value = 0
Delay = 20 seconds
Invoke = GarageDoor

	[[Internet]]
	Type = Periodic
	Interval = 30 seconds
	Invoke = NetworkHealth.Do_Ping
	Parameter = '8.8.8.8',LocalVars:InternetUp
	[[InternetAlert]]
	Type = VarChange
	Var = LocalVars:InternetUp
	Test = NE
	Value = 1
	Invoke = InternetAlertScreen
	    [[GetTempDeck]]
    Type = Periodic
    Interval = 30 seconds
    Invoke = AssignVar.Assign
	Parameter = ISY:State:DeckTemp = MQTT:DeckTemp
		[[GetPipeTemp]]
	Type = Periodic
	Interval = 30 seconds
	Invoke = AssignVar.Assign
	Parameter = ISY:State:PipeTemp = MQTT:PipeTemp
#	[[Test]]
#	Type = Periodic
#	Interval = 13 seconds
#	Invoke = testalerts.AlertProc2

[GarageDoor]
type = Alert
BackgroundColor = cyan
MessageBack = red
CharColor = black
Message = Garage, Door, is, Open
CharSize = 30, 30, 30,40
DeferTime = 15 seconds
BlinkTime = 1
KeyColor = maroon
[[Action]]
type = ON
NodeName = Garage Door Opener-Relay
KeyColor = maroon
label = Garage, Door

[InternetAlertScreen]
    type = Alert
    BackgroundColor = black
	MessageBack = green
	CharColor = navyblue
	Message = Internet, Down
	CharSize = 30,
	DeferTime = 10
	BlinkTime = 1
	KeyColor = maroon
	[[Action]]
		type = SETVAR
		Var = LocaVars:InternetUp
		label = Acknowledge, Outage

#[NodeTest]
#	type = Alert
#	BackgroundColor = black
#	MessageBack = green
#	CharColor = navyblue
#	Message = Test, Node, Ceiling, On
#	CharSize = 30,
#	DeferTime = 10
#	BlinkTime = 1
#	KeyColor = maroon
#	[[Action]]
#		type = ONOFF
#		NodeName = Office Ceiling
#		label = Clear, Test Condition

#[NodeTest2]
#	type = Alert
#	BackgroundColor = pink
#	MessageBack = aqua
#	CharColor = navyblue
#	Message = Test, Node, Ceiling, On2
#	CharSize = 30,
#	DeferTime = 10
#	BlinkTime = 1
#	KeyColor = maroon
#	[[Action]]
#		type = ONOFF
#		NodeName = Office Ceiling
#		label = Clear, Test Condition
		

#[TestAlert]
#	type = Alert
#	BackgroundColor = royalblue
#	MessageBack = red
#	CharColor = black
#	Message = "Test", "Variable", "tEST","Set"
#	CharSize = 30, 30, 40, 30
#	DeferTime = 10 seconds
#	BlinkTime = 2
#	KeyColor = maroon
#	[[Action]]
#		type = SETVAR
#		VarType = State
#		Var = tEST
#		KeyColor = Maroon
#		label = Clear tEST,

#[HouseStat]
#    type = Status
#    NormalOff = Pucks, Downlights, Kitchen Dimmer, Office Ceiling
#    NormalOn = Main Hall, Landscape, LR Dual Spots

[LR1]
    ScreenTitle = Living Room
    ScreenTitleColor = red
    type = Keypad
    label = Living, Room 1
    [[Office Ceiling]]
    type = ONOFF
	label = Office, Ceiling
	Verify = 1
	Blink = 5

    [[LR Dual Spots]]
        label = Dual, Spots
    [[LR Pict Spot]]
        label = Art Spot,
 #   [[Up Lights]]
 #       Blink = 5
    [[TestSeq]]
    type = VARKEY
    label = Error on Value, $
    Var = ISY:Int:Temp2
    ValueSeq = 1,2,3
    Appearance = 1 red 'FAN SPEED; LOW',2 red 'FAN SPEED; MED', 3 red 'FAN SPEED; HIGH'

 [LR2]
    type = Keypad
    label = Living, Room 2   
    [[Main Hall]]
    [[Upper Hall]]
    [[TestProg]]
        type=RUNPROG
        ProgramName = TestProc
        KeyColor = green
        Verify = 1
        GoMsg = Yes, Do, It!
        NoGoMsg = Oops, Never Mind!
        Blink = 11
        label = Test, Program, Verify

[TreeTest]
type = Keypad
label = Stuff,
[[LR1]]
type = GOTO
ScreenName = LR1
KeyColor = purple
[[LR2]]
type = GOTO
ScreenName = LR2
 [[Office Ceiling]]
    type = ONOFF
	label = Office, Ceiling2
	KeyColorOn = black
	KeyColorOff = black
[[TreeTest2]]
type = GOTO
ScreenName = TreeTest2

[TreeTest2]
type = Keypad
label = More Stuff,
 [[Office Ceiling]]
    type = ONOFF
	label = Office, Ceiling3
[[LR1]]
type = GOTO
ScreenName = LR1

#    [[LR Plug Dr]]
#        label = Reading, Light, Door

# [Test]
#	type = Keypad
#	label = Test
#	[[TestVar]]
#	VarType = Int
#	type = SETVARVALUE




